<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 부트스트랩 파일 경로 맵핑 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- DB설정 파일 참조 -->	
	<context:property-placeholder local-override="true" location="classpath:db.properties"/>
	
	<!-- dataSource -->
	<bean class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" id="dataSource">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
	</bean>
	
	<!-- viewResolver -->
	<bean id="viewResolver1" class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	<bean id="viewResolver2" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- sqlSessionFactory -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mappers/*.xml" />
		<property name="configLocation" value="classpath:config.xml" />
	</bean>
	
	<!-- component-scan  -->
	<context:annotation-config />
	<context:component-scan 
	base-package="user.domain,user.persistence,user.service,user.controller, 
				app.domain,app.persistence,app.service,app.controller,
				chat.controller,web.socket,chat.domain,chat.persistence,chat.service,
				attd.controller, attd.service, attd.model, 
				contact.controller, contact.service, contact.exception, 
				mail.controller,mail.domain,mail.service"/>
	
	<!-- dao sqlSessionFactory 주입 -->
	<bean id="userdao" class="user.persistence.UserDAOImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="appdao" class="app.persistence.AppDAOImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="chatdao" class="chat.persistence.ChatDAOImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="calDao" class="user.persistence.CalendarDao" p:sqlSessionFactory-ref="sqlSessionFactory" />
	<bean id="attddao" class="attd.dao.AttdDaoImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	<bean id="deptDao" class="user.persistence.DeptDao" p:sqlSessionFactory-ref="sqlSessionFactory" />	
	<bean id="noticeDao" class="user.persistence.NoticeDao" p:sqlSessionFactory-ref="sqlSessionFactory"/>
	<bean id="freeDao" class="user.persistence.FreeDaoImpl" p:sqlSessionFactory-ref="sqlSessionFactory"/>
	<bean id="manageDao" class="user.persistence.ManageDao" p:sqlSessionFactory-ref="sqlSessionFactory"/>
	
	<bean class="contact.persistence.ContactDaoImpl">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	<bean class="contact.persistence.GroupDaoImpl">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	<bean id="excelDao" class="contact.persistence.ExcelDaoImpl">
	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<bean id="mailDao" class="mail.persistence.MailDao" p:sqlSessionFactory-ref="sqlSessionFactory"/>
	
	
	<bean id="empDao" class="user.persistence.EmpDaoImpl" p:sqlSessionFactory-ref="sqlSessionFactory" />

	<!--bean 객체  -->
	<bean id="loginInterceptor" class="commons.interceptor.LoginInterceptor"/>
	<bean id="download" class="commons.view.AppDownloadView"/>
	<bean id="noticedownload" class="commons.view.NoticeDownloadView"/>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"><!-- 파일 업로드 설정 -->
    <property name="maxUploadSize" value="10000000000"/>
	</bean>
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="smtp.naver.com" />
    <property name="port" value="587" /><!-- 465 or 25 -->
    <property name="username" value="ever_lf" />
    <property name="password" value="junhee1998" />
    <property name="defaultEncoding" value="utf-8" />
    <property name="javaMailProperties">
        <props>
            <prop key="mail.transport.protocol">smtp</prop>
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.starttls.enable">true</prop>
            <prop key="mail.debug">true</prop>
        </props>
    </property>
	</bean>
	
	<!--pdf 빈  -->
	<bean name="pdf" class="attd.pdf.PDFView"/>
	
	<!-- 로그인 세션 관련 인터셉터 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/loginPost"/>
			<ref bean="loginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<!-- 어노테이션 설정 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


</beans>
