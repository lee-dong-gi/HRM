<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD mAPPER 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.AppMappers">
	<!--공통ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="progressapp" parameterType="String" resultType="int">
		select count(*) from approve where userid=#{userid} and appresult=0;
	</select>
	
	<insert id="insertApp" parameterType="app.domain.AppDTO">
		insert into approve(appnum,userid,writer,content,subject,realfilename,pathname)
		values(#{appnum},#{userid},#{writer},#{content},#{subject},#{realfilename},#{pathname})
	</insert>
	
	<delete id="appdelete" parameterType="int">
		delete from approve where appnum=#{appnum}
	</delete>
	
	<select id="appBoard" parameterType="String" resultType="app.domain.AppDTO">
		select * from approve where userid=#{userid} order by appnum desc
	</select>
	
	<select id="appBoardAll" parameterType="String" resultType="app.domain.AppDTO">
		select * from approve where userid not in(#{userid}) order by appnum desc
	</select>
	
	<select id="appcountAll" parameterType="String" resultType="int">
		select count(*) from approve where userid not in(#{userid})
	</select>
	
	<select id="progressappcoAll" parameterType="String" resultType="int">
		select count(*) from approve where userid not in(#{userid}) and appresult=0
	</select>
	
	<select id="appcount" parameterType="String" resultType="int">
		select count(*) from approve where userid=#{userid};
	</select>
	<update id="appupdate" parameterType="app.domain.AppDTO">
		update approve set content=#{content},subject=#{subject},realfilename=#{realfilename},pathname=#{pathname}
		where appnum=#{appnum}
	</update>
	<!--일반 사용자ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="appSearchw" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid=#{userid} and writer like #{writer} order by appnum desc
	</select>
	
	<select id="appSearchwco" parameterType="Map" resultType="int">
		select count(*) from approve where userid=#{userid} and writer like #{writer} order by appnum desc
	</select>
	
	<select id="appSearchs" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid=#{userid} and subject like #{subject} order by appnum desc
	</select>
	
	<select id="appSearchsco" parameterType="Map" resultType="int">
		select count(*) from approve where userid=#{userid} and subject like #{subject} order by appnum desc
	</select>
	
	<select id="appSearchf" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid=#{userid} and realfilename like #{realfilename} order by appnum desc
	</select>
	
	<select id="appSearchfco" parameterType="Map" resultType="int">
		select count(*) from approve where userid=#{userid} and realfilename like #{realfilename} order by appnum desc
	</select>
	<!--결재자 및  관리자ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
	<select id="appSearchwadmin" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid not in(#{userid}) and writer like #{writer} order by appnum desc
	</select>
	
	<select id="appSearchwcoadmin" parameterType="Map" resultType="int">
		select count(*) from approve where userid not in(#{userid}) and writer like #{writer} order by appnum desc
	</select>
	
	<select id="appSearchsadmin" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid not in(#{userid}) and subject like #{subject} order by appnum desc
	</select>
	
	<select id="appSearchscoadmin" parameterType="Map" resultType="int">
		select count(*) from approve where userid not in(#{userid}) and subject like #{subject} order by appnum desc
	</select>
	
	<select id="appSearchfadmin" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid not in(#{userid}) and realfilename like #{realfilename} order by appnum desc
	</select>
	
	<select id="appSearchfcoadmin" parameterType="Map" resultType="int">
		select count(*) from approve where userid not in(#{userid}) and realfilename like #{realfilename} order by appnum desc
	</select>
	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
	<select id="appcontent" parameterType="Map" resultType="app.domain.AppDTO">
		select * from approve where userid=#{userid} and appnum=${appnum}
	</select>
	
	<select id="appcontentm" parameterType="int" resultType="app.domain.AppDTO">
		select * from approve where appnum=${appnum}
	</select>
	
	<update id="okapp" parameterType="int">
		update approve set appresult=1 where appnum=#{appnum}
	</update>
	
	<update id="noapp" parameterType="int">
		update approve set appresult=2 where appnum=#{appnum}
	</update>
	<!--관리자ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  -->
	
	<select id="seluserall" parameterType="String" resultType="user.domain.UserVOD">
		select e.*,dname from employee e natural join dept d where id not in (#{userid}) order by empno desc
	</select>
	
	<select id="seluserallco" parameterType="String" resultType="int">
		select count(*) from employee where id not in (#{userid}) order by empno desc
	</select>
	
	<update id="appoint" parameterType="java.util.List">
		update employee set approval=1 where empno in
		<foreach collection="list" item="appoints" open="(" close=")" separator=",">
        	#{appoints}
    	</foreach>
	</update>
	
	<update id="revoke" parameterType="java.util.List">
		update employee set approval=0 where empno in
		<foreach collection="list" item="revokes" open="(" close=")" separator=",">
        	#{revokes}
    	</foreach>
	</update>
	
	<select id="seldeptup" parameterType="Map" resultType="user.domain.UserVOD">
		select e.* from employee e natural join dept d where e.id not in (#{userid}) and d.dname=#{dname} order by e.empno desc;
	</select>
	
	<select id="seldeptupco" parameterType="Map" resultType="int">
		select count(*) from employee e natural join dept d where e.id not in (#{userid}) and d.dname=#{dname} order by e.empno desc;
	</select>
	
	<select id="seldeptdown" parameterType="Map" resultType="user.domain.UserVOD">
		select e.*,dname from employee e natural join dept d where e.id not in (#{userid}) and d.dname like #{dname} order by e.empno desc;
	</select>
	
	<select id="seldeptdownco" parameterType="Map" resultType="int">
		select count(*) from employee e natural join dept d where e.id not in (#{userid}) and d.dname like #{dname} order by e.empno desc;
	</select>
	
	<select id="selnamedown" parameterType="Map" resultType="user.domain.UserVOD">
		select e.*,dname from employee e natural join dept d where id not in (#{userid}) and name like #{username} order by empno desc;
	</select>
	
	<select id="selnamedownco" parameterType="Map" resultType="int">
		select count(*) from employee where id not in (#{userid}) and name like #{username} order by empno desc;
	</select>
	
	<select id="selempnodown" parameterType="Map" resultType="user.domain.UserVOD">
		select e.*,dname from employee e natural join dept d where id not in (#{userid}) and empno like #{empno} order by empno desc;
	</select>
	
	<select id="selempnodownco" parameterType="Map" resultType="int">
		select count(*) from employee where id not in (#{userid}) and empno like #{empno} order by empno desc;
	</select>
	
	
</mapper>